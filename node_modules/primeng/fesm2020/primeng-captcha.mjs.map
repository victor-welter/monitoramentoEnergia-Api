{"version":3,"file":"primeng-captcha.mjs","sources":["../../src/app/components/captcha/captcha.ts","../../src/app/components/captcha/primeng-captcha.ts"],"sourcesContent":["import { NgModule, AfterViewInit, Component, EventEmitter, Input, NgZone, OnDestroy, Output, ElementRef, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'p-captcha',\n    template: `<div></div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'p-element'\n    }\n})\nexport class Captcha implements AfterViewInit, OnDestroy {\n    @Input() siteKey: string = null;\n\n    @Input() theme = 'light';\n\n    @Input() type = 'image';\n\n    @Input() size = 'normal';\n\n    @Input() tabindex = 0;\n\n    @Input() initCallback = 'initRecaptcha';\n\n    @Output() onResponse: EventEmitter<any> = new EventEmitter();\n\n    @Output() onExpire: EventEmitter<any> = new EventEmitter();\n\n    private _instance: any = null;\n\n    private _language: any = null;\n\n    @Input() get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this._language = language;\n        this.init();\n    }\n\n    constructor(public el: ElementRef, public _zone: NgZone, public cd: ChangeDetectorRef) {}\n\n    ngAfterViewInit() {\n        if ((<any>window).grecaptcha) {\n            if (!(<any>window).grecaptcha.render) {\n                setTimeout(() => {\n                    this.init();\n                }, 100);\n            } else {\n                this.init();\n            }\n        } else {\n            (<any>window)[this.initCallback] = () => {\n                this.init();\n            };\n        }\n    }\n\n    init() {\n        this._instance = (<any>window).grecaptcha.render(this.el.nativeElement.children[0], {\n            sitekey: this.siteKey,\n            theme: this.theme,\n            type: this.type,\n            size: this.size,\n            tabindex: this.tabindex,\n            hl: this.language,\n            callback: (response: string) => {\n                this._zone.run(() => this.recaptchaCallback(response));\n            },\n            'expired-callback': () => {\n                this._zone.run(() => this.recaptchaExpiredCallback());\n            }\n        });\n    }\n\n    reset() {\n        if (this._instance === null) return;\n\n        (<any>window).grecaptcha.reset(this._instance);\n        this.cd.markForCheck();\n    }\n\n    getResponse(): String {\n        if (this._instance === null) return null;\n\n        return (<any>window).grecaptcha.getResponse(this._instance);\n    }\n\n    recaptchaCallback(response: string) {\n        this.onResponse.emit({\n            response: response\n        });\n    }\n\n    recaptchaExpiredCallback() {\n        this.onExpire.emit();\n    }\n\n    ngOnDestroy() {\n        if (this._instance != null) {\n            (<any>window).grecaptcha.reset(this._instance);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Captcha],\n    declarations: [Captcha]\n})\nexport class CaptchaModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}
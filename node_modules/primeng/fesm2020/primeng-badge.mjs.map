{"version":3,"file":"primeng-badge.mjs","sources":["../../src/app/components/badge/badge.ts","../../src/app/components/badge/primeng-badge.ts"],"sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, QueryList, ContentChildren, TemplateRef, Directive, OnDestroy, AfterViewInit, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { UniqueComponentId } from 'primeng/utils';\n\ntype BadgeDirectiveIconPosition = 'left' | 'right' | 'top' | 'bottom';\n\n@Directive({\n    selector: '[pBadge]',\n    host: {\n        class: 'p-element'\n    }\n})\nexport class BadgeDirective implements AfterViewInit, OnDestroy {\n    @Input() iconPos: BadgeDirectiveIconPosition = 'left';\n\n    public _value: string;\n\n    public initialized: boolean;\n\n    private id: string;\n\n    constructor(public el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.id = UniqueComponentId() + '_badge';\n        let el = this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n\n        let badge = document.createElement('span');\n        badge.id = this.id;\n        badge.className = 'p-badge p-component';\n\n        if (this.severity) {\n            DomHandler.addClass(badge, 'p-badge-' + this.severity);\n        }\n\n        if (this.value != null) {\n            badge.appendChild(document.createTextNode(this.value));\n\n            if (String(this.value).length === 1) {\n                DomHandler.addClass(badge, 'p-badge-no-gutter');\n            }\n        } else {\n            DomHandler.addClass(badge, 'p-badge-dot');\n        }\n\n        DomHandler.addClass(el, 'p-overlay-badge');\n        el.appendChild(badge);\n\n        this.initialized = true;\n    }\n\n    @Input() get value(): string {\n        return this._value;\n    }\n\n    set value(val: string) {\n        if (val !== this._value) {\n            this._value = val;\n\n            if (this.initialized) {\n                let badge = document.getElementById(this.id);\n\n                if (this._value) {\n                    if (DomHandler.hasClass(badge, 'p-badge-dot')) DomHandler.removeClass(badge, 'p-badge-dot');\n\n                    if (String(this._value).length === 1) {\n                        DomHandler.addClass(badge, 'p-badge-no-gutter');\n                    } else {\n                        DomHandler.removeClass(badge, 'p-badge-no-gutter');\n                    }\n                } else if (!this._value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n                    DomHandler.addClass(badge, 'p-badge-dot');\n                }\n\n                badge.innerHTML = '';\n                badge.appendChild(document.createTextNode(this._value));\n            }\n        }\n    }\n\n    @Input() severity: string;\n\n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-badge',\n    template: ` <span [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">{{ value }}</span> `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./badge.css'],\n    host: {\n        class: 'p-element'\n    }\n})\nexport class Badge {\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() size: string;\n\n    @Input() severity: string;\n\n    @Input() value: string;\n\n    containerClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.value != undefined && String(this.value).length === 1,\n            'p-badge-lg': this.size === 'large',\n            'p-badge-xl': this.size === 'xlarge',\n            'p-badge-info': this.severity === 'info',\n            'p-badge-success': this.severity === 'success',\n            'p-badge-warning': this.severity === 'warning',\n            'p-badge-danger': this.severity === 'danger'\n        };\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Badge, BadgeDirective, SharedModule],\n    declarations: [Badge, BadgeDirective]\n})\nexport class BadgeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}